/*******************************
* file generated from ReadyLog *
*******************************/

:- pragma(nodebug).
prolog_ipl_proc( testproc ).
prolog_ipl_proc( testproc ) :-[testtoken, anothertesttoken, [ichBinDerAnfangVomSolve, ?(testBeforeSolve), if( loopCond=true, [doLoop, if( loopCond=true, [doLoop], [if( condBeforeSolve, [doABeforeSolve], [doBBeforeSolve] )] )], [if( condBeforeSolve, [doABeforeSolve, solve([nondet("[doA ; ?(phi);phiIsTrue ; doSomethingDeterministic(red);ichBinDasEndeVomSolve, doA ; ?(phi);phiIsTrue ; doSomethingDeterministic(green);ichBinDasEndeVomSolve, doA ; ?(phi);phiIsTrue ; doSomethingDeterministic(blue);ichBinDasEndeVomSolve, doB ; ?(phi);phiIsTrue ; doSomethingDeterministic(red);ichBinDasEndeVomSolve, doB ; ?(phi);phiIsTrue ; doSomethingDeterministic(green);ichBinDasEndeVomSolve, doB ; ?(phi);phiIsTrue ; doSomethingDeterministic(blue);ichBinDasEndeVomSolve, doC ; ?(phi);phiIsTrue ; doSomethingDeterministic(red);ichBinDasEndeVomSolve, doC ; ?(phi);phiIsTrue ; doSomethingDeterministic(green);ichBinDasEndeVomSolve, doC ; ?(phi);phiIsTrue ; doSomethingDeterministic(blue);ichBinDasEndeVomSolve], [doA ; ?(not phi);phiIsFalse ; doSomethingDeterministic(red);ichBinDasEndeVomSolve, doA ; ?(not phi);phiIsFalse ; doSomethingDeterministic(green);ichBinDasEndeVomSolve, doA ; ?(not phi);phiIsFalse ; doSomethingDeterministic(blue);ichBinDasEndeVomSolve, doB ; ?(not phi);phiIsFalse ; doSomethingDeterministic(red);ichBinDasEndeVomSolve, doB ; ?(not phi);phiIsFalse ; doSomethingDeterministic(green);ichBinDasEndeVomSolve, doB ; ?(not phi);phiIsFalse ; doSomethingDeterministic(blue);ichBinDasEndeVomSolve, doC ; ?(not phi);phiIsFalse ; doSomethingDeterministic(red);ichBinDasEndeVomSolve, doC ; ?(not phi);phiIsFalse ; doSomethingDeterministic(green);ichBinDasEndeVomSolve, doC ; ?(not phi);phiIsFalse ; doSomethingDeterministic(blue);ichBinDasEndeVomSolve]")], 1, rewardf)], [doBBeforeSolve, solve([nondet("[doA ; ?(phi);phiIsTrue ; doSomethingDeterministic(red);ichBinDasEndeVomSolve, doA ; ?(phi);phiIsTrue ; doSomethingDeterministic(green);ichBinDasEndeVomSolve, doA ; ?(phi);phiIsTrue ; doSomethingDeterministic(blue);ichBinDasEndeVomSolve, doB ; ?(phi);phiIsTrue ; doSomethingDeterministic(red);ichBinDasEndeVomSolve, doB ; ?(phi);phiIsTrue ; doSomethingDeterministic(green);ichBinDasEndeVomSolve, doB ; ?(phi);phiIsTrue ; doSomethingDeterministic(blue);ichBinDasEndeVomSolve, doC ; ?(phi);phiIsTrue ; doSomethingDeterministic(red);ichBinDasEndeVomSolve, doC ; ?(phi);phiIsTrue ; doSomethingDeterministic(green);ichBinDasEndeVomSolve, doC ; ?(phi);phiIsTrue ; doSomethingDeterministic(blue);ichBinDasEndeVomSolve], [doA ; ?(not phi);phiIsFalse ; doSomethingDeterministic(red);ichBinDasEndeVomSolve, doA ; ?(not phi);phiIsFalse ; doSomethingDeterministic(green);ichBinDasEndeVomSolve, doA ; ?(not phi);phiIsFalse ; doSomethingDeterministic(blue);ichBinDasEndeVomSolve, doB ; ?(not phi);phiIsFalse ; doSomethingDeterministic(red);ichBinDasEndeVomSolve, doB ; ?(not phi);phiIsFalse ; doSomethingDeterministic(green);ichBinDasEndeVomSolve, doB ; ?(not phi);phiIsFalse ; doSomethingDeterministic(blue);ichBinDasEndeVomSolve, doC ; ?(not phi);phiIsFalse ; doSomethingDeterministic(red);ichBinDasEndeVomSolve, doC ; ?(not phi);phiIsFalse ; doSomethingDeterministic(green);ichBinDasEndeVomSolve, doC ; ?(not phi);phiIsFalse ; doSomethingDeterministic(blue);ichBinDasEndeVomSolve]")], 1, rewardf)] )] )][dwajdo, blablubb].
