/* ***************************************************************************
 *  ,=³ .%%% %%%%%%%. .%%%%%.  .%%%%%.   %%%%%.%%. %. %%%%%%%% %% Rheinisch-
 * [==].%%%   %%   %% %%   %%  %%   %%   %%  %%'%%.%%.%% %% %% %% Westfälische
 *  //l%%%    %%   %% %%%%. ' %%       @ %%%%%' '%%%%%%% %% %%%%% Technische
 * [==]%%     %%|=%%   %%=>%  %%         %%  %%  '%%'%%% %% %% %% Hochschule
 * [==]%%%    %%   %% . '%%%% %%  '%%%   %%   %%  '% '%% %% %% %% Aachen
 * [==]'%%%   %%   %% %%   %%  %%   %%   http://kbsg.rwth-aachen.de/
 * o^^o '%%% %%%%%%%' '%%%%%'O '%%%%%'   Knowledge Based Systems Group
 * ***************************************************************************
 *
 *           $Id: agent.readylog 68 2007-12-06 18:30:15Z stf $
 *        author: Stefan Schiffer <schiffer@cs.rwth-aachen.de>
 *   description: application of ReadyLog in the Maze domain.
 *
 * ************************************************************************ */

:- write(" --> loading coffee.readylog ...\n").

%:- lib(toplevel).
%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %%
%%  INCLUDES                            %%
%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %%

%% ReadyLog interpreter
:- ensure_loaded("../../interpreter/steadylog/readylog.pl").
%% eXogenous stuff
:- ensure_loaded("exog.readylog").
%% Functions
:- ensure_loaded("functions.readylog").

%% Debugging stuff
:- ensure_loaded("debug.readylog").
%% Testing stuff
:- ensure_loaded("testing.readylog").

%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %%
%%  LIBRARIES                           %%
%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %%

%% GridVisualization
:- load("../../ecl/keyboard.so").
:- ["../../include/keyboard.pl"].
%% GridVisualization
:- load("../../ecl/gridvis.so").
:- ["../../include/gridvis.pl"].


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                           COFFEE DOMAIN PRIMITIVES                           %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

room(kitchen).
room(office401).
room(office402).
room(office403).
room(office404).

prim_action( noop ).
poss( noop, true ).
causes_val( noop, at, at ).


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                               COMPLEX ACTIONS                                %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


complex_action( make_coffee   , start_make_coffee  , stop_make_coffee  , making_coffee ).
complex_action( pickup(X)     , start_pickup(X)    , stop_pickup(X)    , picking_up(X) ).
complex_action( drop(X)       , start_drop(X)      , stop_drop(X)      , dropping(X) ).
complex_action( goto(X)       , start_goto(X)      , stop_goto(X)      , going_to(X) ).
complex_action( sm_clean      , start_sm_clean     , stop_sm_clean     , sm_cleaning ).
complex_action( sm_calibrate  , start_sm_calibrate , stop_sm_calibrate , sm_calibrating ).
complex_action( sm_beep       , start_sm_beep      , stop_sm_beep      , sm_beeping ).
complex_action( sm_fiep       , start_sm_fiep      , stop_sm_fiep      , sm_fieping ).
complex_action( sm_diagnose   , start_sm_diagnose  , stop_sm_diagnose  , sm_diagnosing ).
complex_action( sm_cautious   , start_sm_cautious  , stop_sm_cautious  , sm_cautiousing ).
complex_action( sm_scan       , start_sm_scan      , stop_sm_scan      , sm_scanning ).
complex_action( sm_heaten     , start_sm_heaten    , stop_sm_heaten    , sm_heating ).
complex_action( sm_ask_sugar  , start_sm_ask_sugar , stop_sm_ask_sugar , sm_asking_sugar ).
complex_action( sm_lazer      , start_sm_lazer     , stop_sm_lazer     , sm_lazering ).

complex_action( t_01 , start_t_01 , stop_t_01 , t_01).
complex_action( t_02 , start_t_02 , stop_t_02 , t_02).
complex_action( t_03 , start_t_03 , stop_t_03 , t_03).
complex_action( t_04 , start_t_04 , stop_t_04 , t_04).
complex_action( t_05 , start_t_05 , stop_t_05 , t_05).
complex_action( t_06 , start_t_06 , stop_t_06 , t_06).
complex_action( t_07 , start_t_07 , stop_t_07 , t_07).
complex_action( t_08 , start_t_08 , stop_t_08 , t_08).
complex_action( t_09 , start_t_09 , stop_t_09 , t_09).
complex_action( t_10 , start_t_10 , stop_t_10 , t_10).
complex_action( t_11 , start_t_11 , stop_t_11 , t_11).
complex_action( t_12 , start_t_12 , stop_t_12 , t_12).
complex_action( t_13 , start_t_13 , stop_t_13 , t_13).
complex_action( sm_01 , start_sm_01 , stop_sm_01 , sm_01).
complex_action( sm_02 , start_sm_02 , stop_sm_02 , sm_02).
complex_action( sm_03 , start_sm_03 , stop_sm_03 , sm_03).
complex_action( sm_04 , start_sm_04 , stop_sm_04 , sm_04).
complex_action( sm_05 , start_sm_05 , stop_sm_05 , sm_05).
complex_action( sm_06 , start_sm_06 , stop_sm_06 , sm_06).
complex_action( sm_07 , start_sm_07 , stop_sm_07 , sm_07).
complex_action( sm_08 , start_sm_08 , stop_sm_08 , sm_08).
complex_action( sm_09 , start_sm_09 , stop_sm_09 , sm_09).
complex_action( sm_10 , start_sm_10 , stop_sm_10 , sm_10).
complex_action( sm_11 , start_sm_11 , stop_sm_11 , sm_11).
complex_action( sm_12 , start_sm_12 , stop_sm_12 , sm_12).
complex_action( sm_13 , start_sm_13 , stop_sm_13 , sm_13).

/**
 * To keep the idea of complex actions as high level as possible, we define 
 * both poss(.) and causes_val(.) for the complex_action itself and default 
 * poss(starter) and causes_val(finisher) to these terms
 */
poss( make_coffee   , true ).
poss( pickup(X)     , true ).
poss( goto(R)       , room(R) ).
poss( sm_clean      , true ).
poss( sm_calibrate  , holding=false ).
poss( sm_beep       , true ).
poss( sm_fiep       , true ).
poss( sm_diagnose   , true ).
poss( sm_cautious   , true ).
poss( sm_scan       , true ).
poss( sm_heaten     , true ).
poss( sm_ask_sugar  , true ).
poss( sm_lazer      , true ).

poss( t_01 , true ).
poss( t_02 , true ).
poss( t_03 , true ).
poss( t_04 , true ).
poss( t_05 , true ).
poss( t_06 , true ).
poss( t_07 , true ).
poss( t_08 , true ).
poss( t_09 , true ).
poss( t_10 , true ).
poss( t_11 , true ).
poss( t_12 , true ).
poss( t_13 , true ).
poss( sm_01 , true ).
poss( sm_02 , true ).
poss( sm_03 , true ).
poss( sm_04 , true ).
poss( sm_05 , true ).
poss( sm_06 , true ).
poss( sm_07 , true ).
poss( sm_08 , true ).
poss( sm_09 , true ).
poss( sm_10 , true ).
poss( sm_11 , true ).
poss( sm_12 , true ).
poss( sm_13 , true ).

/**
 * SSAs of the complex action's effects on the world
 */
causes_val( make_coffee  , at,         L, and([at=L]) ).
causes_val( pickup(X)    , holding,    L, and([L=X]) ).
causes_val( pickup(X)    , calibrated, L, and([L=false]) ).
causes_val( goto(R)      , at,         L, and([L=R]) ).
causes_val( sm_clean     , at,         L, and([at=L]) ).
causes_val( sm_calibrate , calibrated, L, and([L=true]) ).
causes_val( sm_beep      , at,         L, and([at=L]) ).
causes_val( sm_fiep      , at,         L, and([at=L]) ).
causes_val( sm_diagnose  , at,         L, and([at=L]) ).
causes_val( sm_cautious  , at,         L, and([at=L]) ).
causes_val( sm_scan      , at,         L, and([at=L]) ).
causes_val( sm_heaten    , at,         L, and([at=L]) ).
causes_val( sm_ask_sugar , at,         L, and([at=L]) ).
causes_val( sm_lazer     , at,         L, and([at=L]) ).

causes_val( t_01 , at,         L, and([at=L]) ).
causes_val( t_02 , at,         L, and([at=L]) ).
causes_val( t_03 , at,         L, and([at=L]) ).
causes_val( t_04 , at,         L, and([at=L]) ).
causes_val( t_05 , at,         L, and([at=L]) ).
causes_val( t_06 , at,         L, and([at=L]) ).
causes_val( t_07 , at,         L, and([at=L]) ).
causes_val( t_08 , at,         L, and([at=L]) ).
causes_val( t_09 , at,         L, and([at=L]) ).
causes_val( t_10 , at,         L, and([at=L]) ).
causes_val( t_11 , at,         L, and([at=L]) ).
causes_val( t_12 , at,         L, and([at=L]) ).
causes_val( t_13 , at,         L, and([at=L]) ).
causes_val( sm_01 , at,         L, and([at=L]) ).
causes_val( sm_02 , at,         L, and([at=L]) ).
causes_val( sm_03 , at,         L, and([at=L]) ).
causes_val( sm_04 , at,         L, and([at=L]) ).
causes_val( sm_05 , at,         L, and([at=L]) ).
causes_val( sm_06 , at,         L, and([at=L]) ).
causes_val( sm_07 , at,         L, and([at=L]) ).
causes_val( sm_08 , at,         L, and([at=L]) ).
causes_val( sm_09 , at,         L, and([at=L]) ).
causes_val( sm_10 , at,         L, and([at=L]) ).
causes_val( sm_11 , at,         L, and([at=L]) ).
causes_val( sm_12 , at,         L, and([at=L]) ).
causes_val( sm_13 , at,         L, and([at=L]) ).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                    FLUENTS                                   %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% the initial state
prim_fluent( at ).
initial_val( at, kitchen ).

prim_fluent( request ).
initial_val( request, office404 ).

prim_fluent( holding ).
initial_val( holding , false ) .

prim_fluent( calibrated ).
initial_val( calibrated , false ) .

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                  PROCEDURES                                  %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

proc(
    test_todo,
    [ stop_t_01, stop_t_02, start_t_02, start_t_01 ]    
).

function( reward, V, lif( at=kitchen, V=0, V=2 ) ).



